function dM = Bloch(t, M, Param, Pulse)
%BLOCH Bloch-McConnell ordinary differential equations.
%   dM = Bloch(t, M, Param, Pulse)
%
%   --args--
%   t: Function handle variable, represents the time.
%   M : magnetization vector [Mxf, Myf, Mzf, Mzr]
%   Param: Tissue parameter structure.
%
%          -fields-
%          M0f: Free pool equilibrium magnetization.
%          M0r: Restricted pool equilibrium magnetization. (M0r = F*M0f)
%          R1f: Free pool longitudinal relaxation rate.
%          R1r: Restricted pool longitudinal relaxation rate.
%          T2f: Free pool transverse relaxation time.
%          T2r: Restricted poo transverse relaxation time.
%          kf: Free pool magnetization exchange rate. 
%          kr: Restrict pool magnetization exchange rate. (= kf/F)
%
%   Pulse: RF Pulse structure (generated by GETPULSE).
%
%   Reference: John G. Sled and G. Bruce Pike. Quantitative Imaging of 
%              Magnetization Transfer Exchange and Relaxation Properties 
%              In Vivo Using MRI, Mag. Res in Med, 46:923?931, Eqs. 1-4
%              (2001)
%
%   See also BLOCHSOL, BLOCHNOMT.
% 

dM = zeros(4,1);

if (nargin < 4)
    omega  = 0;
    omega2 = 0;
    delta  = 0;
else
    omega  = Pulse.omega(t);
    omega2 = Pulse.omega2(t);
    delta  = Pulse.delta;
end

W = pi*Param.G.*omega2;

dM(1) = -Param.R2f*M(1) - 2*pi*delta*M(2);
dM(2) = -Param.R2f*M(2) + 2*pi*delta*M(1) + omega*M(3);
dM(3) =  Param.R1f*(Param.M0f-M(3)) - Param.kf*M(3) + Param.kr*M(4) - omega*M(2);
dM(4) =  Param.R1r*(Param.M0r-M(4)) + Param.kf*M(3) - Param.kr*M(4) - W*M(4);

end
